

#spring.mvc.view.prefix= /template/
#spring.mvc.view.suffix= .html



spring.mvc.view.prefix= /jsp/
spring.mvc.view.suffix= .jsp




#spring.mvc.view.prefix= /template/
#spring.mvc.view.suffix= .html

logging.level.org.springframework=TRACE
logging.level.com=TRACE



# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"

#spring.mvc.throw-exception-if-no-handler-found=true
#spring.resources.add-mappings=false

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration

server.error.whitelabel.enabled=false
server.servlet.context-path=/

#spring.datasource.url = jdbc:mysql://localhost:3308/emp?useSSL=false

# Old database
#spring.datasource.url = jdbc:postgresql://emp.ckozdp4gymtz.us-east-1.rds.amazonaws.com:5432/emp?useSSL=false

# New database
spring.datasource.url = jdbc:postgresql://winedb.csdwtoldfxam.us-east-1.rds.amazonaws.com:5432/caldata?useSSL=false


# Username and password
spring.datasource.username = postgres
spring.datasource.password = password

#spring.datasource.username = root
#spring.datasource.password =

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect


#for whiteLabel error
error.whitelabel.enabled=false

#spring.mail.protocol=smtp
#spring.mail.defaultEncoding=UTF-8 
#server.port=8085
#server.port=8090
#logging.level.web=debug
#logging.level.root=debug


